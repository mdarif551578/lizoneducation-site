"use client";

import { useState } from "react";
import { generateIeltsTips } from "@/app/actions";
import { useToast } from "@/hooks/use-toast";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Button } from "@/components/ui/button";
import { Label } from "@/components/ui/label";
import { Lightbulb, LoaderCircle, Sparkles } from "lucide-react";

type AreaOfFocus = "writing" | "speaking" | "reading" | "listening";

const StudyTipsGenerator = () => {
  const [areaOfFocus, setAreaOfFocus] = useState<AreaOfFocus | "">("");
  const [tips, setTips] = useState("");
  const [loading, setLoading] = useState(false);
  const { toast } = useToast();

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    if (!areaOfFocus) {
      toast({
        title: "No area selected",
        description: "Please select an area of focus to get tips.",
        variant: "destructive",
      });
      return;
    }
    setLoading(true);
    setTips("");
    try {
      const result = await generateIeltsTips({ areaOfFocus });
      if (result.tips) {
        setTips(result.tips);
      } else {
        throw new Error("Failed to generate tips. Please try again.");
      }
    } catch (error) {
      const errorMessage = error instanceof Error ? error.message : "An unknown error occurred.";
      toast({
        title: "Error",
        description: errorMessage,
        variant: "destructive",
      });
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="grid gap-12 md:grid-cols-2 items-center">
      <div className="space-y-4">
        <div className="inline-block rounded-lg bg-primary/10 px-3 py-1 text-sm text-primary font-medium">
          AI-Powered Assistant
        </div>
        <h2 className="text-3xl md:text-4xl font-bold font-headline">Get Instant IELTS Tips</h2>
        <p className="text-muted-foreground">
          Select an area you want to improve, and our AI tutor will provide you with personalized preparation tips to boost your score.
        </p>
        <form onSubmit={handleSubmit} className="space-y-4">
          <div>
            <Label htmlFor="area-of-focus">Area of Focus</Label>
            <Select onValueChange={(value: AreaOfFocus) => setAreaOfFocus(value)} value={areaOfFocus}>
              <SelectTrigger id="area-of-focus" className="w-full">
                <SelectValue placeholder="Select an area..." />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="writing">Writing</SelectItem>
                <SelectItem value="speaking">Speaking</SelectItem>
                <SelectItem value="reading">Reading</SelectItem>
                <SelectItem value="listening">Listening</SelectItem>
              </SelectContent>
            </Select>
          </div>
          <Button type="submit" disabled={loading} className="w-full shadow-md">
            {loading ? (
              <LoaderCircle className="mr-2 h-4 w-4 animate-spin" />
            ) : (
              <Sparkles className="mr-2 h-4 w-4" />
            )}
            Generate Tips
          </Button>
        </form>
      </div>
      <Card className="min-h-[300px] flex flex-col justify-center shadow-lg bg-card">
        <CardHeader>
          <div className="flex items-center gap-3">
            <Lightbulb className="w-6 h-6 text-accent" />
            <CardTitle>Your Personalized Tips</CardTitle>
          </div>
          <CardDescription>Tips generated by our AI tutor will appear here.</CardDescription>
        </CardHeader>
        <CardContent>
          {loading && (
            <div className="flex items-center justify-center space-x-2 text-muted-foreground">
              <LoaderCircle className="h-5 w-5 animate-spin" />
              <span>Generating tips...</span>
            </div>
          )}
          {tips && !loading && (
            <div className="prose prose-sm prose-invert max-w-none text-foreground whitespace-pre-wrap">
              {tips}
            </div>
          )}
          {!tips && !loading && (
            <p className="text-center text-muted-foreground">Select an area and click "Generate Tips" to start.</p>
          )}
        </CardContent>
      </Card>
    </div>
  );
};

export default StudyTipsGenerator;
